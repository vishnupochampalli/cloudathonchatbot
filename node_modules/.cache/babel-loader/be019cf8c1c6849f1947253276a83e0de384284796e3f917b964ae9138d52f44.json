{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishn\\\\developer-help-ui\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from \"react\";\n// import \"./../styles.css\";\n\n// const Chatbot = () => {\n//   useEffect(() => {\n//     const scriptUrl = \"https://www.gstatic.com/dialogflow-console/fast/df-messenger/prod/v1/df-messenger.js\";\n\n//     if (!document.querySelector(`script[src=\"${scriptUrl}\"]`)) {\n//       const script = document.createElement(\"script\");\n//       script.src = scriptUrl;\n//       script.async = true;\n//       script.onload = () => {\n//         if (!document.querySelector(\"df-messenger\")) {\n//           const dfMessenger = document.createElement(\"df-messenger\");\n//           dfMessenger.setAttribute(\"location\", \"us-central1\");\n//           dfMessenger.setAttribute(\"project-id\", \"devassist-453809\");\n//           dfMessenger.setAttribute(\"agent-id\", \"eda05098-bb5d-40e4-b8e2-48564fb73f8b\");\n//           dfMessenger.setAttribute(\"language-code\", \"en\");\n\n//           const chatBubble = document.createElement(\"df-messenger-chat-bubble\");\n//           chatBubble.setAttribute(\"chat-title\", \"DevAssist\");\n\n//           dfMessenger.appendChild(chatBubble);\n//           document.body.appendChild(dfMessenger);\n//         }\n//       };\n//       document.body.appendChild(script);\n//     }\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Chatbot Assistant</h2>\n//       <p>Ask your technical queries here.</p>\n//     </div>\n//   );\n// };\n\n// export default Chatbot;\n\n// import React, { useEffect, useState } from \"react\";\n\n// const Chatbot = () => {\n//   const [scriptLoaded, setScriptLoaded] = useState(false);\n\n//   useEffect(() => {\n//     const scriptUrl = \"https://www.gstatic.com/dialogflow-console/fast/df-messenger/prod/v1/df-messenger.js\";\n\n//     // Check if the script is already present to avoid duplicate loading\n//     if (!document.querySelector(`script[src=\"${scriptUrl}\"]`)) {\n//       const script = document.createElement(\"script\");\n//       script.src = scriptUrl;\n//       script.async = true;\n//       script.onload = () => setScriptLoaded(true);\n//       script.onerror = () => console.error(\"Failed to load Dialogflow script\");\n//       document.body.appendChild(script);\n//     } else {\n//       setScriptLoaded(true); // If script is already loaded, update state\n//     }\n//   }, []);\n\n//   return (\n//     <div>\n//       {scriptLoaded ? (\n//         <div dangerouslySetInnerHTML={{ __html: `\n//           <df-messenger\n//             location=\"us-central1\"\n//             project-id=\"ltc-hack-prj-14\"\n//             agent-id=\"69ab9700-3e32-4189-a60b-56fc06e366ba\"\n//             language-code=\"en\"\n//             max-query-length=\"-1\"\n//           >\n//             <df-messenger-chat-bubble chat-title=\"devAssist\"></df-messenger-chat-bubble>\n//           </df-messenger>\n//         ` }} />\n//       ) : (\n//         <p>Loading Chatbot...</p>\n//       )}\n\n//       <style>\n//         {`\n//           df-messenger {\n//             z-index: 999;\n//             position: fixed;\n//             --df-messenger-font-color: #000;\n//             --df-messenger-font-family: Google Sans;\n//             --df-messenger-chat-background: #f3f6fc;\n//             --df-messenger-message-user-background: #d3e3fd;\n//             --df-messenger-message-bot-background: #fff;\n//             bottom: 16px;\n//             right: 16px;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// };\n\n// export default Chatbot;\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [scriptLoaded, setScriptLoaded] = useState(false);\n  useEffect(() => {\n    const scriptUrl = \"https://www.gstatic.com/dialogflow-console/fast/df-messenger/prod/v1/df-messenger.js\";\n    if (!document.querySelector(`script[src=\"${scriptUrl}\"]`)) {\n      const script = document.createElement(\"script\");\n      script.src = scriptUrl;\n      script.async = true;\n      script.onload = () => setScriptLoaded(true);\n      script.onerror = () => console.error(\"Failed to load Dialogflow script\");\n      document.body.appendChild(script);\n    } else {\n      setScriptLoaded(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"incident-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Need further assistance?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"If the AI chatbot couldn\\u2019t resolve your issue, you can raise an incident using the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"GCP Fault Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 89\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        className: \"incident-link\",\n        children: \"Submit a Fault Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), scriptLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          <df-messenger\n            location=\"us-central1\"\n            project-id=\"ltc-hack-prj-14\"\n            agent-id=\"69ab9700-3e32-4189-a60b-56fc06e366ba\"\n            language-code=\"en\"\n            max-query-length=\"-1\"\n            chat-open\n          >\n            <df-messenger-chat-bubble chat-title=\"devAssist\"></df-messenger-chat-bubble>\n          </df-messenger>\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Chatbot...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          df-messenger {\n  z-index: 999;\n  position: fixed;\n  top: 120%;\n  left: 80%;\n  transform: translate(-50%, -40%); /* Move down a bit */\n  width: 400px;\n  height: 500px;\n  --df-messenger-font-color: #000;\n  --df-messenger-font-family: Google Sans;\n  --df-messenger-chat-background: #f3f6fc;\n  --df-messenger-message-user-background: #d3e3fd;\n  --df-messenger-message-bot-background: #fff;\n}\n\n\n          .incident-section a {\n            display: inline-block;\n            padding: 10px 15px;\n            background: #007bff;\n            color: white;\n            text-decoration: none;\n            border-radius: 5px;\n            margin-top: 10px;\n          }\n\n          .incident-section a:hover {\n            background: #0056b3;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"71QDnBoVRgw6vEb4TYOpbv5yS1o=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Chatbot","_s","scriptLoaded","setScriptLoaded","scriptUrl","document","querySelector","script","createElement","src","async","onload","onerror","console","error","body","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/vishn/developer-help-ui/src/components/Chatbot.js"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import \"./../styles.css\";\r\n\r\n// const Chatbot = () => {\r\n//   useEffect(() => {\r\n//     const scriptUrl = \"https://www.gstatic.com/dialogflow-console/fast/df-messenger/prod/v1/df-messenger.js\";\r\n    \r\n//     if (!document.querySelector(`script[src=\"${scriptUrl}\"]`)) {\r\n//       const script = document.createElement(\"script\");\r\n//       script.src = scriptUrl;\r\n//       script.async = true;\r\n//       script.onload = () => {\r\n//         if (!document.querySelector(\"df-messenger\")) {\r\n//           const dfMessenger = document.createElement(\"df-messenger\");\r\n//           dfMessenger.setAttribute(\"location\", \"us-central1\");\r\n//           dfMessenger.setAttribute(\"project-id\", \"devassist-453809\");\r\n//           dfMessenger.setAttribute(\"agent-id\", \"eda05098-bb5d-40e4-b8e2-48564fb73f8b\");\r\n//           dfMessenger.setAttribute(\"language-code\", \"en\");\r\n\r\n//           const chatBubble = document.createElement(\"df-messenger-chat-bubble\");\r\n//           chatBubble.setAttribute(\"chat-title\", \"DevAssist\");\r\n\r\n//           dfMessenger.appendChild(chatBubble);\r\n//           document.body.appendChild(dfMessenger);\r\n//         }\r\n//       };\r\n//       document.body.appendChild(script);\r\n//     }\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Chatbot Assistant</h2>\r\n//       <p>Ask your technical queries here.</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chatbot;\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n\r\n// const Chatbot = () => {\r\n//   const [scriptLoaded, setScriptLoaded] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     const scriptUrl = \"https://www.gstatic.com/dialogflow-console/fast/df-messenger/prod/v1/df-messenger.js\";\r\n\r\n//     // Check if the script is already present to avoid duplicate loading\r\n//     if (!document.querySelector(`script[src=\"${scriptUrl}\"]`)) {\r\n//       const script = document.createElement(\"script\");\r\n//       script.src = scriptUrl;\r\n//       script.async = true;\r\n//       script.onload = () => setScriptLoaded(true);\r\n//       script.onerror = () => console.error(\"Failed to load Dialogflow script\");\r\n//       document.body.appendChild(script);\r\n//     } else {\r\n//       setScriptLoaded(true); // If script is already loaded, update state\r\n//     }\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       {scriptLoaded ? (\r\n//         <div dangerouslySetInnerHTML={{ __html: `\r\n//           <df-messenger\r\n//             location=\"us-central1\"\r\n//             project-id=\"ltc-hack-prj-14\"\r\n//             agent-id=\"69ab9700-3e32-4189-a60b-56fc06e366ba\"\r\n//             language-code=\"en\"\r\n//             max-query-length=\"-1\"\r\n//           >\r\n//             <df-messenger-chat-bubble chat-title=\"devAssist\"></df-messenger-chat-bubble>\r\n//           </df-messenger>\r\n//         ` }} />\r\n//       ) : (\r\n//         <p>Loading Chatbot...</p>\r\n//       )}\r\n\r\n//       <style>\r\n//         {`\r\n//           df-messenger {\r\n//             z-index: 999;\r\n//             position: fixed;\r\n//             --df-messenger-font-color: #000;\r\n//             --df-messenger-font-family: Google Sans;\r\n//             --df-messenger-chat-background: #f3f6fc;\r\n//             --df-messenger-message-user-background: #d3e3fd;\r\n//             --df-messenger-message-bot-background: #fff;\r\n//             bottom: 16px;\r\n//             right: 16px;\r\n//           }\r\n//         `}\r\n//       </style>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chatbot;\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Chatbot = () => {\r\n  const [scriptLoaded, setScriptLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const scriptUrl = \"https://www.gstatic.com/dialogflow-console/fast/df-messenger/prod/v1/df-messenger.js\";\r\n\r\n    if (!document.querySelector(`script[src=\"${scriptUrl}\"]`)) {\r\n      const script = document.createElement(\"script\");\r\n      script.src = scriptUrl;\r\n      script.async = true;\r\n      script.onload = () => setScriptLoaded(true);\r\n      script.onerror = () => console.error(\"Failed to load Dialogflow script\");\r\n      document.body.appendChild(script);\r\n    } else {\r\n      setScriptLoaded(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      {/* Incident Raising Section */}\r\n      <div className=\"incident-section\">\r\n  <h2>Need further assistance?</h2>\r\n  <p>If the AI chatbot couldn’t resolve your issue, you can raise an incident using the <strong>GCP Fault Form</strong>.</p>\r\n  <a href=\"#\" className=\"incident-link\">Submit a Fault Report</a>\r\n</div>\r\n\r\n      {/* Chatbot */}\r\n      {scriptLoaded ? (\r\n        <div dangerouslySetInnerHTML={{ __html: `\r\n          <df-messenger\r\n            location=\"us-central1\"\r\n            project-id=\"ltc-hack-prj-14\"\r\n            agent-id=\"69ab9700-3e32-4189-a60b-56fc06e366ba\"\r\n            language-code=\"en\"\r\n            max-query-length=\"-1\"\r\n            chat-open\r\n          >\r\n            <df-messenger-chat-bubble chat-title=\"devAssist\"></df-messenger-chat-bubble>\r\n          </df-messenger>\r\n        ` }} />\r\n      ) : (\r\n        <p>Loading Chatbot...</p>\r\n      )}\r\n\r\n      <style>\r\n        {`\r\n          df-messenger {\r\n  z-index: 999;\r\n  position: fixed;\r\n  top: 120%;\r\n  left: 80%;\r\n  transform: translate(-50%, -40%); /* Move down a bit */\r\n  width: 400px;\r\n  height: 500px;\r\n  --df-messenger-font-color: #000;\r\n  --df-messenger-font-family: Google Sans;\r\n  --df-messenger-chat-background: #f3f6fc;\r\n  --df-messenger-message-user-background: #d3e3fd;\r\n  --df-messenger-message-bot-background: #fff;\r\n}\r\n\r\n\r\n          .incident-section a {\r\n            display: inline-block;\r\n            padding: 10px 15px;\r\n            background: #007bff;\r\n            color: white;\r\n            text-decoration: none;\r\n            border-radius: 5px;\r\n            margin-top: 10px;\r\n          }\r\n\r\n          .incident-section a:hover {\r\n            background: #0056b3;\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}